# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    machine:
      image: circleci/classic:edge
    working_directory: ~/test
    steps:
      - checkout
      - run:
          name: Slack Notification [START]
          command: |
            if [ -z $SLACK_WEBHOOK ];then echo "SLACK_WEBHOOK is not configured.";else curl $SLACK_WEBHOOK \
            -s \
            -X POST \
            -H "Content-Type: application/json" \
            -d "{ \"text\": \":arrow_forward: ${CIRCLE_BRANCH} of https://circleci.com/gh/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}\n> COVERAGE: *$(curl https://codecov.io/gh/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/branch/master/graph/badge.txt)%* https://codecov.io/gh/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}\n> STATUS: https://circleci.com/gh/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}.png?r=$(cat /dev/urandom | base64 | fold -w 10 | head -n 1)\" }";fi
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.19.0/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run:
          name: docker-compose up
          command: |
            set -x
            docker-compose up --build -d
      - run:
          name: lint for express
          command: |
            set -x
            docker-compose exec app yarn lint-code-express
      - run:
          name: lint for vue
          command: |
            set -x
            docker-compose exec app yarn lint-code-vue
      - run:
          name: migration:run
          command: |
            set -x
            docker-compose exec app yarn migration:run
      - run:
          name: build for express
          command: |
            set -x
            docker-compose exec app yarn build-express
      - run:
          name: build for vue
          command: |
            set -x
            docker-compose exec app yarn build-vue
      - run:
          name: test for express
          command: |
            set -x
            docker-compose exec app yarn test-express
      - run:
          name: test for vue
          command: |
            set -x
            docker-compose exec app yarn test-vue
      - run:
          name: set the codecov env
          command: |
            set -x
            if [ -z $CODECOV_TOKEN ];then echo "CODECOV_TOKEN is not configured.";else docker-compose exec app /bin/sh -c "export CODECOV_TOKEN=$CODECOV_TOKEN";fi
      - run:
          name: codecov for express
          command: |
            set -x
            if [ -z $CODECOV_TOKEN ];then echo "CODECOV_TOKEN is not configured.";else docker-compose exec app yarn codecov-express;fi
      - run:
          name: codecov for vue
          command: |
            set -x
            if [ -z $CODECOV_TOKEN ];then echo "CODECOV_TOKEN is not configured.";else docker-compose exec app yarn codecov-vue;fi
      - run:
          name: docker-compose down
          command: docker-compose down
      - run:
          name: Slack Notification [FINISH]
          command: |
            if [ -z $SLACK_WEBHOOK ];then echo "SLACK_WEBHOOK is not configured.";else curl $SLACK_WEBHOOK \
            -s \
            -X POST \
            -H "Content-Type: application/json" \
            -d "{ \"text\": \":tada: ${CIRCLE_BRANCH} of https://circleci.com/gh/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}\n> COVERAGE: *$(sleep 3 && curl https://codecov.io/gh/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/branch/master/graph/badge.txt)%* https://codecov.io/gh/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}\n> STATUS: https://circleci.com/gh/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}.png?r=$(cat /dev/urandom | base64 | fold -w 10 | head -n 1)\" }";fi
      - run:
          name: Slack Notification [ERROR]
          command: |
            if [ -z $SLACK_WEBHOOK ];then echo "SLACK_WEBHOOK is not configured.";else curl $SLACK_WEBHOOK \
            -s \
            -X POST \
            -H "Content-Type: application/json" \
            -d "{ \"text\": \":boom: ${CIRCLE_BRANCH} of https://circleci.com/gh/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}\n> COVERAGE: *$(curl https://codecov.io/gh/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}/branch/master/graph/badge.txt)%* https://codecov.io/gh/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}\n> STATUS: https://circleci.com/gh/${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME}.png?r=$(cat /dev/urandom | base64 | fold -w 10 | head -n 1)\" }";fi
          when: on_fail
